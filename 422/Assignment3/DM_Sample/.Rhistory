lang <- lang.raw
hc.single <- eclust(lang, "hclust" , hc_method="single")
plot(hc.single, palette="jco", as.ggplot=T)
hc.single <- eclust(lang, "hclust" , hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust" , hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust" , hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
lang <- lang.raw
hc.single <- eclust(lang, "hclust" , hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust" , hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust" , hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
clusters.125 <- cutree(hc.average, 125)
clusters.125 <- cutree(hc.average, h=125)
table(clusters.125)
print(hc.average)
print(hc.average$height)
print(clusters.125)
names(clusters.125)
names(clusters.125.size)
clusters.125.$size
clusters.125.$length
length(clusters.125)
max(clusters.125)
clusters.125 <- cutree(hc.average, h=125)
sprintf("We will have %d Clusters", max(clusters.125))
clusters.1 <- cutree(hc.average, k=7)
clusters.1
lang <- lang.raw
plotDendo <- function(Kval = NULL){
hc.single <- eclust(lang, "hclust" , K = Kval,  hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust" , K = Kval, hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust" , K = Kval, hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
}
plotDendo();
hc.single <- eclust(lang, "hclust" , k =7,  hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust", k =7, hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust", k=7, hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
cluster.stats(dist(hc.average), 7, alt.clustering = NULL,
noisecluster=FALSE,
silhouette = TRUE, G2 = FALSE, G3 = FALSE,
wgap=TRUE, sepindex=TRUE, sepprob=0.1,
sepwithnoise=TRUE,
compareonly = FALSE,
aggregateonly = FALSE)
fpc::cluster.stats(dist(hc.average), 7, alt.clustering = NULL,
noisecluster=FALSE,
silhouette = TRUE, G2 = FALSE, G3 = FALSE,
wgap=TRUE, sepindex=TRUE, sepprob=0.1,
sepwithnoise=TRUE,
compareonly = FALSE,
aggregateonly = FALSE)
fpc::cluster.stats(d=NULL, 7, alt.clustering = NULL,
noisecluster=FALSE,
silhouette = TRUE, G2 = FALSE, G3 = FALSE,
wgap=TRUE, sepindex=TRUE, sepprob=0.1,
sepwithnoise=TRUE,
compareonly = FALSE,
aggregateonly = FALSE)
fpc::cluster.stats(hc.average, 7, alt.clustering = NULL,
noisecluster=FALSE,
silhouette = TRUE, G2 = FALSE, G3 = FALSE,
wgap=TRUE, sepindex=TRUE, sepprob=0.1,
sepwithnoise=TRUE,
compareonly = FALSE,
aggregateonly = FALSE)
fpc::cluster.stats(dist(lang), 7, alt.clustering = NULL,
noisecluster=FALSE,
silhouette = TRUE, G2 = FALSE, G3 = FALSE,
wgap=TRUE, sepindex=TRUE, sepprob=0.1,
sepwithnoise=TRUE,
compareonly = FALSE,
aggregateonly = FALSE)
fpc::cluster.stats(dist(lang), clusters.125)
fpc::cluster.stats(lang, clusters.125)
fpc::cluster.stats(dist(lang), clusters.125)
hc.single <- eclust(lang, "hclust" , k = max(clusters.125),  hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust", k = max(clusters.125), hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust", k= max(clusters.125), hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
names(stats)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats.$dunn)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats,dunn)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats.dunn)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats['dunn'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats['dunn'])
sprintf("%f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("%f", stats['dunn'])
sprintf("%f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.complete, k=max(clusters.125)))
sprintf("%f", stats['dunn'])
sprintf("%f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.average, k=max(clusters.125)))
sprintf("%f", stats['dunn'])
sprintf("%f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("For Single Link Dunn Index %f", stats['dunn'])
sprintf("For Single Link Silwidth %f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.complete, k=max(clusters.125)))
sprintf("For Complete Link Dunn Index %f", stats['dunn'])
sprintf("For Complete Link Silwidth %f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.average, k=max(clusters.125)))
sprintf("For Avg. Link Dunn Index %f", stats['dunn'])
sprintf("For Avg. Link Silwidth %f", stats['avg.silwidth'])
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out=prcomp(pulsar, scale=TRUE)
pr.out$rotation
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out=prcomp(pulsar)
pr.out$rotation
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out=prcomp(pulsar, scale=TRUE)
pr.out$rotation
pr.out$center
pr.out$center
pr.out$scale
pr.out$rotation
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- princomp(pulsar, cor=TRUE, score=TRUE)
pr.out
summary(pr.out)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- princomp(pulsar, cor=TRUE, score=TRUE)
dim(pulsar)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- princomp(scale(pulsar), cor=TRUE, score=TRUE)
dim(pulsar)
summary(pr.out)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- princomp(scale(pulsar), cor=TRUE, score=TRUE)
dim(pulsar)
summary(pr.out)
autoplot(pr.out, data = pulsar, colour = 'Species', loadings = TRUE)
autoplot(prcomp(pulsar), data = pulsar, colour = 'Species', loadings = TRUE)
autoplot(prcomp(pulsar), data = pulsar, colour = 'Species', loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(prcomp(pulsar), data = pulsar, colour = 'Species', loadings = TRUE)
install.packages(ggfortify)
install.packages("ggfortify")
library(ggfortify)
library(ggplot2)
autoplot(prcomp(pulsar), data = pulsar, colour = 'Species', loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(prcomp(pulsar), data = pulsar, loadings = TRUE)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- pccomp(scale(pulsar))
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pr.out <- prcomp(scale(pulsar))
summary(pr.out)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar,  loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour, loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = pulsar$class, loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, col = pulsar$class, loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, col=pulsar$class, loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = color, loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE, loadings.label.size = 3)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
pr.out$rotation
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
biplot(pr.out, scale = 0)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
biplot(pr.out, colour = "class",)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pulsar <- pulsar [, -9]
pr.out <- prcomp(scale(pulsar))
summary(pr.out)
k <- kmeans(pulsar, centers=7, nstart=10)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar, centers=7, nstart=5)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar, centers=2, nstart=5)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar, centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar[,1:2])
k <- kmeans(pulsar[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k <- kmeans(pulsar, centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pulsar <- pulsar
pr.out <- prcomp(scale(pulsar))
summary(pr.out)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
k <- kmeans(pulsar, centers=2, nstart=25)
fviz_cluster(k, data=pulsar, colour = "class")
k <- kmeans(pulsar, centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k$size
View(plotDendo)
sum(pulsar$class)
class1 <- sum(pulsar$class)
sprintf(" Class 1 have %d Obs , Class 0 have %d ", class1 , dim(pulsar)[1] - class1)
sum (pulsar[k$cluster==0,])
sum(pulsar[k$cluster==0,]$class)
sum(pulsar[k$cluster==1,]$class)
sum(pulsar[k$cluster==2,]$class)
sum(pulsar[k$cluster==1,]$class)
sum(pulsar[k$cluster==2,]$class)
sum(pulsar[k$cluster==1,]$class)
num1inLC <- sum(pulsar[k$cluster==1,]$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is % and Number of Obs belonging to class 0 in Large cluster is" , num1inLC, size(pulsar[k$cluster==1,]) - num1inLC)
num1inLC <- sum(pulsar[k$cluster==1,]$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is % and Number of Obs belonging to class 0 in Large cluster is" , num1inLC, length(pulsar[k$cluster==1,]) - num1inLC)
num1inLC <- sum(pulsar[k$cluster==1,]$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is %d and Number of Obs belonging to class 0 in Large cluster is %d " , num1inLC, length(pulsar[k$cluster==1,]) - num1inLC)
num1inLC <- sum(pulsar[k$cluster==1,]$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is %d and Number of Obs belonging to class 0 in Large cluster is %d " , num1inLC, length(pulsar[k$cluster==1]) - num1inLC)
num1inLC <- sum(pulsar[k$cluster==1,]$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is %d and Number of Obs belonging to class 0 in Large cluster is %d " , num1inLC, length(pulsar[k$cluster==1,]) - num1inLC)
x <- pulsar[k$cluster==1,]
dim(x)
pulsarc1 <- pulsar[k$cluster==1,]
num1inLC <- sum(pulsarc1$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is %d and Number of Obs belonging to class 0 in Large cluster is %d " , num1inLC, dim(pulsarc1)[1] - num1inLC)
k <- kmeans(pr.out$x[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
x <- prcomp(scale(mamal))
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
mamal <- read.csv("file19.csv", header=T, sep=",")
dim(mamal)
rownames(mamal) <- mamal[,1]
mamal <- mamal [ , -1]
x <- prcomp(scale(mamal))
summary(x)
x <- prcomp(scale(mamal))
summary(x$x)
x <- prcomp(scale(mamal))
var(x$i)
names(k)
k$totss
rownames(mamal) <- mamal[,1]
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
mamal <- read.csv("file19.csv", header=T, sep=",")
dim(mamal)
rownames(mamal) <- mamal[,1]
mamal <- mamal [ , -1]
cov(mamal)
rownames(mamal) <- mamal[,1]
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
mamal <- read.csv("file19.csv", header=T, sep=",")
dim(mamal)
rownames(mamal) <- mamal[,1]
mamal <- mamal [ , -1]
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
library(ggfortify)
library(ggplot2)
biplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE, choices=c(1,3))
library(ggfortify)
library(ggplot2)
biplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE, choices=c(1,3))
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
(k$betweenss + k$tot.withinss) / dim(pulsar)[1]
#Load libraries
library(factoextra)
library(cluster)
options("digits"=3)
rm(list=ls())
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
mamal <- read.csv("file19.csv", header=T, sep=",")
dim(mamal)
rownames(mamal) <- mamal[,1]
mamal <- mamal [ , -1]
mamal.scaled <- scale(mamal)
fviz_nbclust(mamal.scaled, kmeans, method="wss")
fviz_nbclust(mamal.scaled, kmeans, method="silhouette")
k <- kmeans(mamal.scaled, centers=7, nstart=10)
fviz_cluster(k, data=mamal.scaled)
print(k['size'])
print(k['totss'])
print(k['withinss'])
for (clus in 1:7){
print(which(k$cluster == clus))
print("\n")
}
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
lang.raw <- read.csv("language.csv", header=T, sep=",")
dim(lang.raw)
rownames(lang.raw) <- lang.raw[,1]
lang.raw <- lang.raw [ , -1]
lang <- lang.raw
hc.single <- eclust(lang, "hclust" , hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust" , hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust" , hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
clusters.125 <- cutree(hc.average, h=125)
sprintf("We will have %d Clusters", max(clusters.125))
hc.single <- eclust(lang, "hclust" , k = max(clusters.125),  hc_method="single")
fviz_dend(hc.single, palette="jco", as.ggplot=T)
hc.complete <- eclust(lang, "hclust", k = max(clusters.125), hc_method="complete")
fviz_dend(hc.complete,palette="jco", as.ggplot=T)
hc.average <- eclust(lang, "hclust", k= max(clusters.125), hc_method="average")
fviz_dend(hc.average, palette="jco", as.ggplot=T)
stats <- fpc::cluster.stats(dist(lang), cutree(hc.single, k=max(clusters.125)))
sprintf("For Single Link Dunn Index %f", stats['dunn'])
sprintf("For Single Link Silwidth %f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.complete, k=max(clusters.125)))
sprintf("For Complete Link Dunn Index %f", stats['dunn'])
sprintf("For Complete Link Silwidth %f", stats['avg.silwidth'])
stats <- fpc::cluster.stats(dist(lang), cutree(hc.average, k=max(clusters.125)))
sprintf("For Avg. Link Dunn Index %f", stats['dunn'])
sprintf("For Avg. Link Silwidth %f", stats['avg.silwidth'])
# Load the Diabetes dataset and set seed
setwd("~/Desktop/Assignments&Coursework/422/Assignment3/")
set.seed(1122)
options("digits"=3)
pulsar <- read.csv("HTRU_2.csv", header=T, sep=",")
pulsar <- pulsar
pr.out <- prcomp(scale(pulsar))
summary(pr.out)
library(ggfortify)
library(ggplot2)
autoplot(pr.out, data = pulsar, colour = "class", loadings = TRUE,loadings.colour = 'gold',
loadings.label = TRUE)
k <- kmeans(pulsar, centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k$size
class1 <- sum(pulsar$class)
sprintf(" Class 1 have %d Obs , Class 0 have %d ", class1 , dim(pulsar)[1] - class1)
pulsarc1 <- pulsar[k$cluster==1,]
num1inLC <- sum(pulsarc1$class)
sprintf("Number of Obs belonging to class 1 in Large cluster is %d and Number of Obs belonging to class 0 in Large cluster is %d " , num1inLC, dim(pulsarc1)[1] - num1inLC)
(k$betweenss + k$tot.withinss) / dim(pulsar)[1]
k <- kmeans(pr.out$x[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
k$betweenss
k$tot.withinss
dim(pulsar)[1]
(k$betweenss / k$tot.withinss)
(k$betweenss / k$totss)
(k$tot.withinss / k$totss)
fviz_cluster(k, data=pulsar)
k <- kmeans(scale(pulsar), centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
dim(pulsar)
(k$tot.withinss / k$totss)
clusplot(pulsar, k$cluster)
(k$tot.withinss / k$totss)
clusplot(scale(pulsar), k$cluster)
houette<- silhouette(k$cluster, dist(pulsar))
summary(houette)
avghouette <- mean(houette[,3])
avghouette
houette.new<- silhouette(k.new$cluster, dist(pulsar))
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
res <- mean(psl[,3])
res
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
res <- mean(psl[,3])
res
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
res <- mean(psl[,3])
summary(res)
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
res <- mean(psl[,3])
summary(res)
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
k$cluster
psl<- silhouette(k$cluster=1, dist(pulsar))
psl<- silhouette(k$cluster==1, dist(pulsar))
summary(psl)
psl<- silhouette(k$cluster==2, dist(pulsar))
summary(psl)
k <- kmeans(pr.out$x[, 1:2], centers=2, nstart=25)
fviz_cluster(k, data=pulsar)
psl<- silhouette(k$cluster, dist(pulsar))
summary(psl)
k <- kmeans(mamal.scaled, centers=5, nstart=10)
fviz_cluster(k, data=mamal.scaled)
k <- kmeans(mamal.scaled, centers=7, nstart=10)
fviz_cluster(k, data=mamal.scaled)
k <- kmeans(mamal.scaled, centers=5, nstart=10)
fviz_cluster(k, data=mamal.scaled)
print(k['totss'])
print(k['size'])
print(k['totss'])
print(k['withinss'])
k <- kmeans(mamal.scaled, centers=7, nstart=10)
fviz_cluster(k, data=mamal.scaled)
print(k['size'])
print(k['totss'])
print(k['withinss'])
